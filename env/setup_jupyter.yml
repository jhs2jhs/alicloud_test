#!/usr/bin/env ansible-playbook
---

- hosts: localhost

  vars:
    # base package on GNU/Linux.
    base_packages:
      - bash
      - bash-completion
      - ca-certificates
      - curl
      - git
      - openssl
      - sshpass

    # Alpine Linux.
    apk_packages:
      - openssh-client
      - vim
      - python3-pip

    # Python depedency to use docker via ansible
    pip_packages:
      - jupyter

    # Debian, Ubuntu.
    apt_packages: "{{ apk_packages }}"

    # jupyter configuration files # todo to change it
    jupyter_notebook_config_py_url: "https://raw.githubusercontent.com/jianhuashao/alicloud_test/master/env/jupyter_notebook_config.py"
    notebook_ansible_url: "https://raw.githubusercontent.com/jianhuashao/alicloud_test/master/notebook/nb_ansible_on_jupyter_ubuntu.ipynb"
    notebook_rds_mysql_url: "https://raw.githubusercontent.com/jianhuashao/alicloud_test/master/notebook/nb_rds_mysql_demo.ipynb"

  tasks:
    # General Linux.
    - name: install same packages
      package: name={{ item }} state=present
      with_items: "{{ base_packages }}"
      when:
        - base_packages is defined
        - ansible_pkg_mgr != "portage"

    # Debian, Ubuntu.
    - name: install apt packages
      apt: name={{ item }} state=present
      with_items: "{{ apt_packages }}"
      when:
        - apt_packages is defined
        - ansible_pkg_mgr == "apt"

    - name: set local
      shell: export LC_ALL=C

    # General Python packages.
    - name: install some pip packages
      pip: name={{ item }} state=present
      with_items: "{{ pip_packages }}"
      when: pip_packages is defined

    # install Jupyter.
    #- name: upgrade the six
    #  pip: name=six state=latest

    - name: install the jupyter notebook
      pip: name=jupyter state=latest

    # Disable Jupyter authentication of token.
    - name: create `/root/.jupyter` directory
      file: path=/root/.jupyter state=directory mode=0700

    - name: get the jupyter_notebook_config.py
      get_url: url={{ jupyter_notebook_config_py_url }} dest=/root/.jupyter/jupyter_notebook_config.py mode=0644

    # Get the example notebook
    - name: get the example notebook for ansible
      get_url: url={{ notebook_url }} dest=/root/ mode=0644
    - name: get the example notebook for rds
      get_url: url={{ notebook_rds_mysql_url }} dest=/root/ mode=0644

    - name: kill jupyter process if we already have it, to avoid port conflict
      shell: if pgrep jupyter; then pkill jupyter; fi
      ignore_errors: True

    - name: start jupyter notebook server
      shell: nohup jupyter-notebook --ip 0.0.0.0 --port 8888 --no-browser --allow-root --notebook-dir=/root &


# vim:ft=ansible :
